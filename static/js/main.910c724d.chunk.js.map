{"version":3,"sources":["Constants.js","actions/orderAction.js","components/Order.js","services/OrderService.js","components/Summary.js","App.js","reportWebVitals.js","reducers/orderReducer.js","reducers/index.js","index.js"],"names":["ADD_ITEM_TO_ORDER","REMOVE_ITEM_FROM_ORDER","CLEAR_ORDER","addItem","payload","dispatch","type","addItemToOrder","removeItem","removeItemFromOrder","clearItem","Order","orderReducer","useSelector","state","useDispatch","orders","className","length","map","order","id","title","price","unit","onClick","orderAction","itemToAdd","filter","item","itemToRemove","_filterPromotionItems","_minimumUnit","min","i","_discountPerSet","promotionItems","items","discountRate","discount","_discountCalculate","_discountRate","_removeAlreadyDiscount","numberToRemove","Number","Summary","useState","receive","setReceive","summaryPrice","OrderSet1","JSON","parse","stringify","OrderSet2","OrderSet3","OrderSet4","OrderSet5","OrderSet6","OrderSet7","Math","floor","summaryDiscount","netPrice","change","style","fontSize","display","flexDirection","padding","align","color","textAlign","name","value","onChange","event","target","orderActions","App","sellItems","setSellItems","fetchData","a","axios","get","process","data","console","log","useEffect","then","books","margin","width","height","border","borderRadius","src","cover","alt","flex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","orderService","combineReducers","store","createStore","reducers","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.910c724d.chunk.js","sourcesContent":["export const ADD_ITEM_TO_ORDER = 'ADD_ITEM_TO_ORDER'\nexport const REMOVE_ITEM_FROM_ORDER = 'REMOVE_ITEM_FROM_ORDER'\nexport const CLEAR_ORDER = 'CLEAR_ORDER'\n","import {\n  ADD_ITEM_TO_ORDER,\n  CLEAR_ORDER,\n  REMOVE_ITEM_FROM_ORDER\n} from '../Constants'\n\nexport const addItemToOrder = (payload) => ({\n  type: ADD_ITEM_TO_ORDER,\n  payload\n})\n\nexport const removeItemFromOrder = (payload) => ({\n  type: REMOVE_ITEM_FROM_ORDER,\n  payload\n})\n\nexport const clearItemFromOrder = () => ({\n  type: CLEAR_ORDER\n})\n\n// For Async\nexport const addItem = (payload) => {\n  return (dispatch) => {\n    dispatch(addItemToOrder(payload))\n  }\n}\n\nexport const removeItem = (payload) => {\n  return (dispatch) => {\n    dispatch(removeItemFromOrder(payload))\n  }\n}\n\nexport const clearItem = () => {\n  return (dispatch) => {\n    dispatch(clearItemFromOrder())\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as orderAction from '../actions/orderAction'\n\nfunction Order() {\n  const orderReducer = useSelector((state) => state.orderReducer)\n  const dispatch = useDispatch()\n  const orders = orderReducer.orders\n\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Unit</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.length > 0 ? (\n            orders.map((order) => (\n              <tr key={order.id}>\n                <td>{order.id}</td>\n                <td>{order.title}</td>\n                <td>{order.price}</td>\n                <td> x {order.unit}</td>\n                <td onClick={() => dispatch(orderAction.addItem(order))}>⬆️</td>\n                <td onClick={() => dispatch(orderAction.removeItem(order))}>\n                  ⬇️\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td>No Order Item</td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Order\n","const addItemToOrder = (orders, itemToAdd) => {\n  const alreadyInOrder = orders.filter((item) => item.id === itemToAdd.id)\n\n  if (alreadyInOrder.length > 0) {\n    return orders.map((item) =>\n      item.id === itemToAdd.id ? { ...item, unit: item.unit + 1 } : item\n    )\n  }\n  return [...orders, { ...itemToAdd, unit: 1 }]\n}\n\nconst removeItemFromOrder = (orders, itemToRemove) => {\n  const itemInOrder = orders.filter((item) => item.id === itemToRemove.id)\n\n  if (itemInOrder[0].unit === 1) {\n    return orders.filter((item) => item.id !== itemToRemove.id)\n  }\n  return orders.map((item) =>\n    item.id === itemToRemove.id ? { ...item, unit: item.unit - 1 } : item\n  )\n}\n\nconst summaryPrice = (orders) => {\n  let summaryPrice = 0\n  for (let i = 0; i < orders.length; i++) {\n    summaryPrice = summaryPrice + orders[i].price * orders[i].unit\n  }\n  return summaryPrice\n}\n\nconst summaryDiscount = (orders) => {\n  let discount = 0\n  const promotionItems = _filterPromotionItems(orders)\n\n  const OrderSet1 = JSON.parse(JSON.stringify(promotionItems))\n  discount = discount + _discountPerSet(OrderSet1) * _minimumUnit(OrderSet1)\n\n  const OrderSet2 = _removeAlreadyDiscount(OrderSet1, _minimumUnit(OrderSet1))\n  discount = discount + _discountPerSet(OrderSet2) * _minimumUnit(OrderSet2)\n\n  const OrderSet3 = _removeAlreadyDiscount(OrderSet2, _minimumUnit(OrderSet2))\n  discount = discount + _discountPerSet(OrderSet3) * _minimumUnit(OrderSet3)\n\n  const OrderSet4 = _removeAlreadyDiscount(OrderSet3, _minimumUnit(OrderSet3))\n  discount = discount + _discountPerSet(OrderSet4) * _minimumUnit(OrderSet4)\n\n  const OrderSet5 = _removeAlreadyDiscount(OrderSet4, _minimumUnit(OrderSet4))\n  discount = discount + _discountPerSet(OrderSet5) * _minimumUnit(OrderSet5)\n\n  const OrderSet6 = _removeAlreadyDiscount(OrderSet5, _minimumUnit(OrderSet5))\n  discount = discount + _discountPerSet(OrderSet6) * _minimumUnit(OrderSet6)\n\n  const OrderSet7 = _removeAlreadyDiscount(OrderSet6, _minimumUnit(OrderSet6))\n  discount = discount + _discountPerSet(OrderSet7) * _minimumUnit(OrderSet7)\n\n  return Math.floor(discount)\n}\n\nconst _filterPromotionItems = (orders) => {\n  return orders.filter((item) => item.id !== '9780241392362')\n}\n\nconst _minimumUnit = (orders) => {\n  let min = 10000000\n  for (let i = 0; i < orders.length; i++) {\n    if (min > orders[i].unit) {\n      min = orders[i].unit\n    }\n  }\n  return min\n}\n\nconst _discountRate = (promotionItems) => {\n  switch (promotionItems.length) {\n    case 1:\n      return 0\n    case 2:\n      return 0.1\n    case 3:\n      return 0.11\n    case 4:\n      return 0.12\n    case 5:\n      return 0.13\n    case 6:\n      return 0.14\n    case 7:\n      return 0.15\n    default:\n      return 0\n  }\n}\n\nconst _discountCalculate = (items, discountRate) => {\n  let discount = 0\n  for (let i = 0; i < items.length; i++) {\n    discount = discount + items[i].price * discountRate\n  }\n  return discount\n}\n\nconst _discountPerSet = (promotionItems) => {\n  const discountRate = _discountRate(promotionItems)\n  return _discountCalculate(promotionItems, discountRate)\n}\n\nconst _removeAlreadyDiscount = (promotionItems, numberToRemove) => {\n  for (let i = 0; i < promotionItems.length; i++) {\n    promotionItems[i].unit = Number(promotionItems[i].unit) - numberToRemove\n  }\n  return promotionItems.filter((item) => item.unit !== 0)\n}\n\nexport { addItemToOrder, removeItemFromOrder, summaryPrice, summaryDiscount }\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport * as orderActions from '../actions/orderAction'\nimport { summaryPrice, summaryDiscount } from '../services/OrderService'\n\nfunction Summary() {\n  const [receive, setReceive] = useState(0)\n  const dispatch = useDispatch()\n  const orderReducer = useSelector((state) => state.orderReducer)\n  const price = summaryPrice(orderReducer.orders)\n  const discount = summaryDiscount(orderReducer.orders)\n  const netPrice = price - discount\n  const change = receive - netPrice\n\n  const handleInputChange = (event) => {\n    setReceive(event.target.value)\n  }\n\n  return (\n    <div\n      style={{\n        fontSize: 20,\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        padding: 30\n      }}\n    >\n      <table className=\"table-striped\">\n        <tbody>\n          <tr>\n            <td>Price : </td>\n            <td id=\"summary\" align=\"right\" style={{ color: 'blue' }}>\n              {price}\n            </td>\n          </tr>\n          <tr>\n            <td>Discount : </td>\n            <td id=\"discount\" align=\"right\" style={{ color: 'green' }}>\n              {discount}\n            </td>\n          </tr>\n          <tr>\n            <td>Net Price : </td>\n            <td align=\"right\" style={{ color: 'blue' }}>\n              {netPrice}\n            </td>\n          </tr>\n          <tr>\n            <td>Receive : </td>\n            <td align=\"right\">\n              <input\n                style={{ textAlign: 'right' }}\n                type=\"number\"\n                name=\"receive\"\n                value={receive}\n                onChange={handleInputChange}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>Change : </td>\n            {change > 0 ? (\n              <td align=\"right\" style={{ color: 'green' }}>\n                {change}\n              </td>\n            ) : (\n              <td align=\"right\" style={{ color: 'red' }}>\n                {change}\n              </td>\n            )}\n          </tr>\n          <tr>\n            <td></td>\n            <td align=\"right\">\n              <button\n                className=\"btn btn-info mt-2\"\n                onClick={() => {\n                  dispatch(orderActions.clearItem())\n                  setReceive(0)\n                }}\n              >\n                Clear Order\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Summary\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport * as orderActions from './actions/orderAction'\nimport Order from './components/Order'\nimport Summary from './components/Summary'\n\nfunction App() {\n  const [sellItems, setSellItems] = useState([])\n  const dispatch = useDispatch()\n\n  const fetchData = async () => {\n    try {\n      const { data } = await axios.get(\n        process.env.REACT_APP_API_URL + 'shiba-book-shop.json'\n      )\n      console.log(data)\n      return data\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    fetchData().then((data) => setSellItems(data.books))\n  }, [])\n\n  return (\n    <div style={{ margin: 20 }}>\n      <h1 style={{ textAlign: 'center' }}>{process.env.REACT_APP_NAME}</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"row\" style={{ textAlign: 'center' }}>\n            {sellItems &&\n              sellItems.map((item) => (\n                <div\n                  onClick={() => {\n                    dispatch(orderActions.addItem(item))\n                  }}\n                  key={item.id}\n                  style={{\n                    fontSize: 14,\n                    margin: 10,\n                    padding: 10,\n                    width: 180,\n                    height: 370,\n                    border: '1px solid teal',\n                    borderRadius: 10\n                  }}\n                >\n                  <img\n                    src={item.cover}\n                    alt={item.id}\n                    style={{ width: 144, height: 220 }}\n                  />\n                  <p>{item.title}</p>\n                  <p> Price : {item.price}</p>\n                  <button className=\"btn btn-primary btn-sm\">BUY</button>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div\n          className=\"col\"\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          <h2>Order</h2>\n          <div style={{ flex: 2 }}>\n            <Order />\n          </div>\n          <div style={{ flex: 1 }}>\n            <Summary />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ADD_ITEM_TO_ORDER,\n  CLEAR_ORDER,\n  REMOVE_ITEM_FROM_ORDER\n} from '../Constants'\n\nimport * as orderService from '../services/OrderService'\n\nconst initialState = {\n  orders: []\n}\n\nconst orderReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_ITEM_TO_ORDER:\n      return {\n        ...state,\n        orders: orderService.addItemToOrder(state.orders, payload)\n      }\n\n    case REMOVE_ITEM_FROM_ORDER:\n      return {\n        ...state,\n        orders: orderService.removeItemFromOrder(state.orders, payload)\n      }\n    case CLEAR_ORDER:\n      return {\n        ...state,\n        orders: []\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default orderReducer\n","import { combineReducers } from 'redux'\nimport orderReducer from './orderReducer'\n\nexport default combineReducers({ orderReducer })\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './bootstrap.min.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}